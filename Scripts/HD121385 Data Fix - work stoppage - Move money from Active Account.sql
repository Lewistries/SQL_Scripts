
BEGIN TRY;
	BEGIN TRANSACTION;
	PRINT 'Transaction(s) started...';
		-- *********************************************************************************************************
		-- BEGIN SQL STATEMENT(S) - DO NOT PUT GO STATEMENTS IN YOUR SQL STATEMENTS!
		--	https://dsthelpdesk.dst.local/hpd30/Ticket/ShowTicket.aspx?TicketNumber=121385
		--	XXXXXXXXXX 329740 has contributions in her retired account. Due to pre-Orbit retirement we are unable to ReCal the benefit. 
		-- *********************************************************************************************************

		DECLARE
			@PersonId AS INT = 329740,
			@MembershipId INT =1153892,
			@TotalEEPRE NUMERIC(12,2) = 6.26,
			@JournalText AS VARCHAR(4096) = 'HD121385 Data Fix - work stoppage - Move money from Active Account',
			@Updater AS VARCHAR(45) = 'HD121385\DST\Sean.Lewis',
			@RETIREMENT_PLAN_CODE varchar(10) = 'STG',
			@BenefitAccountId INT =  321787,
			@SourceObject varchar(15) = 'RETIREMENT'
			;

		IF NOT EXISTS(
			SELECT 1 FROM PERSON_JOURNAL  WHERE CREATE_USER_ID = @Updater AND PERSON_ID = @personId
		) 
			BEGIN;
				
		
				DECLARE @CONTRIB TABLE(RECID INT);
				DECLARE @SCOPEID INT;

				PRINT 'CONTRIB_DETAIL'
				INSERT INTO CONTRIB_DETAIL
				(ORIGINAL_CONTRIB_DETAIL_ID, AGENCY_NUM, CONTRIB_SUMMARY_ID, RETIREMENT_SYSTEM_CODE, RETIREMENT_PLAN_CODE, REPORT_DATE, PAY_PERIOD_BEGIN_DATE, PAY_PERIOD_END_DATE, SOURCE_OBJECT, 
				CONTRIB_DETAIL_TYPE_CODE, PAY_TYPE_CODE, ADJUSTMENT_CODE, STATUS_CODE, STATUS_DATE, MEMBERSHIP_ID, PERSON_ID, SSN_EIN_ID, BIRTH_DATE, PREFIX_CODE, FIRST_NAME, MIDDLE_NAME, LAST_NAME,
				SUFFIX_CODE, GENDER_CODE, LINE1_ADDRESS, LINE2_ADDRESS, LINE3_ADDRESS, LINE4_ADDRESS, CITY, STATE_CODE, ZIP_CODE, FOREIGN_IND, DEPARTMENT_NUM, EMPLOYMENT_DATE, RETIREMENT_ELIGIBILITY_DATE,
				VACATION_HOURS_PAID, CONTRACT_PERIOD_TYPE_CODE,	CONTRACT_BEGIN_DATE, CONTRACT_END_DATE, TERMINATION_DATE, TERMINATION_TYPE_CODE, POSITION_NUM, SHARED_POSITION_NUM, SPLIT_IND, REVERSED_IND,
				SPECIALIST_USER_ID, SPECIALIST_DATETIME, SERVICE_PURCHASE_ID, COMMENTS, SELECT_IND, SERVICE_EARNED_IND, OVERRIDE_IND, SERVICE_CREDIT_YEARS,
				FIRE_RESCUE_ROSTER_ID, SERVICE_PURCHASE_CONTRIB_DETAIL_ID, CONTRIB_DETAIL_SUBMISSION_ID, CREATE_USER_ID, CREATE_DATETIME, UPDATE_USER_ID, UPDATE_DATETIME, TRANSFER_ID, MERGE_TRANSACTION_ID, REFUND_ID)
				OUTPUT inserted.CONTRIB_DETAIL_ID INTO @CONTRIB
				SELECT
				NULL, AGENCY_NUM, CONTRIB_SUMMARY_ID, RETIREMENT_SYSTEM_CODE, RETIREMENT_PLAN_CODE, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, 'RETIREMENT',
				'RETIREMENT', 'REG', ADJUSTMENT_CODE, 'POST', STATUS_DATE, MEMBERSHIP_ID, PERSON_ID, SSN_EIN_ID, BIRTH_DATE, PREFIX_CODE, FIRST_NAME, MIDDLE_NAME, LAST_NAME, 
				SUFFIX_CODE, GENDER_CODE, LINE1_ADDRESS, LINE2_ADDRESS, LINE3_ADDRESS, LINE4_ADDRESS, CITY, STATE_CODE, ZIP_CODE, FOREIGN_IND, DEPARTMENT_NUM, EMPLOYMENT_DATE, RETIREMENT_ELIGIBILITY_DATE,
				VACATION_HOURS_PAID, CONTRACT_PERIOD_TYPE_CODE, CONTRACT_BEGIN_DATE, CONTRACT_END_DATE, TERMINATION_DATE, TERMINATION_TYPE_CODE, POSITION_NUM, SHARED_POSITION_NUM, SPLIT_IND, REVERSED_IND,
				SPECIALIST_USER_ID, SPECIALIST_DATETIME,  SERVICE_PURCHASE_ID, @JournalText, 'Y', SERVICE_EARNED_IND, OVERRIDE_IND, NULL,
				FIRE_RESCUE_ROSTER_ID, SERVICE_PURCHASE_CONTRIB_DETAIL_ID, CONTRIB_DETAIL_SUBMISSION_ID, @Updater, CURRENT_TIMESTAMP, @Updater, CURRENT_TIMESTAMP, TRANSFER_ID, MERGE_TRANSACTION_ID, REFUND_ID
				FROM
				CONTRIB_DETAIL CD WITH (NOLOCK) WHERE CONTRIB_DETAIL_ID=74088110;
				
				SELECT @scopeId = MAX(RECID) FROM @CONTRIB;

				PRINT 'FIX EEPRE';

				INSERT INTO [dbo].[CONTRIB_DETAIL_COMPONENT]
				(
				[CONTRIB_DETAIL_ID]
				,[CONTRIB_COMPONENT_TYPE_CODE]
				,[DETAIL_AMT]
				,[WAGE_AMT]
				,[EMPLOYER_PAID_IND]
				,[CREATE_USER_ID]
				,[CREATE_DATETIME]
				,[UPDATE_USER_ID]
				,[UPDATE_DATETIME]
				)
				SELECT @scopeId
				,'EEPRE'
				,@TotalEEPRE * -1
				,0.0
				,'N'
				,@Updater
				,CURRENT_TIMESTAMP
				,@Updater
				,CURRENT_TIMESTAMP;

				-- insert BENEFIT ACCOUNT CONTRIB SUMMARY 'FIX EEPRE'
				
				INSERT BENEFIT_ACCOUNT_CONTRIB_SUMMARY(BENEFIT_ACCOUNT_ID, BENEFIT_ACCOUNT_CONTRIB_SUMMARY_TYPE_CODE, BENEFIT_ACCOUNT_CONTRIB_SUMMARY_AMT, CREATE_USER_ID, CREATE_DATETIME, UPDATE_USER_ID, UPDATE_DATETIME)
				VALUES(@BenefitAccountId, 'EEPRE' , @TotalEEPRE, @Updater, CURRENT_TIMESTAMP, @Updater, CURRENT_TIMESTAMP);

				-- CREATE ACCOUNTING ENTRIES
				DECLARE
					@DEBIT_DETAIL_FUND_CODE_ID AS INT = 0,
					@CREDIT_DETAIL_FUND_CODE_ID AS INT = 0,
					@TRANSACTION_TYPE_CODE AS VARCHAR(10) = '';		

				
				--FUND CODE DETERMINATION for EEPRE
				SELECT	TOP 1 @DEBIT_DETAIL_FUND_CODE_ID = CA.DEBIT_DETAIL_FUND_CODE_ID,
							@CREDIT_DETAIL_FUND_CODE_ID = CA.CREDIT_DETAIL_FUND_CODE_ID,
							@TRANSACTION_TYPE_CODE = CA.TRANSACTION_TYPE_CODE
				FROM	CONTRIBUTION_FUND_DETERMINATION_ACCOUNTING_ENTRY CA WITH (NOLOCK)
				INNER JOIN CONTRIBUTION_FUND_DETERMINATION CF WITH (NOLOCK) ON CA.CONTRIBUTION_FUND_DETERMINATION_ID = CF.CONTRIBUTION_FUND_DETERMINATION_ID
				WHERE	CONTRIB_DETAIL_TYPE_CODE = @SourceObject AND CONTRIB_REPORT_TYPE_CODE = @RETIREMENT_PLAN_CODE AND CONTRIB_COMPONENT_TYPE_CODE = 'EEPRE';
		PRINT'----------------------------------------------------------------------------';
		PRINT' INSERT ACCOUNTING ENTRIES FOR EEPRE';
		PRINT'----------------------------------------------------------------------------';
				INSERT INTO
				ACCOUNTING_ENTRY
					(SOURCE_CODE
					,STATUS_CODE
					,STATUS_DATE
					,SENT_TO_ACCT_SYSTEM_DATETIME
					,DETAIL_FUND_CODE_ID
					,TRANSACTION_AMOUNT
					,TRANSACTION_TYPE_CODE
					,RECEIPT_DEPOSIT_ID
					,RECEIPT_DETAIL_ID
					,ENTRY_TYPE_CODE
					,TRANSACTION_DATE
					,REQUEST_ID
					,BATCH_SCHEDULE_ID
					,INVOICE_MASTER_ID
					,CREATE_USER_ID
					,CREATE_DATETIME
					,UPDATE_USER_ID
					,UPDATE_DATETIME
					,MEMBERSHIP_ID)
				VALUES
					(@SourceObject, 'PEND', CURRENT_TIMESTAMP, NULL, @DEBIT_DETAIL_FUND_CODE_ID, @TotalEEPRE, @TRANSACTION_TYPE_CODE, NULL, NULL, 'DEBIT', CAST(GETDATE()AS DATE), NULL, NULL, NULL, @Updater, CURRENT_TIMESTAMP, @Updater, CURRENT_TIMESTAMP, @MembershipId),
					(@SourceObject, 'PEND', CURRENT_TIMESTAMP, NULL, @CREDIT_DETAIL_FUND_CODE_ID, @TotalEEPRE, @TRANSACTION_TYPE_CODE, NULL, NULL, 'CREDIT', CAST(GETDATE()AS DATE), NULL, NULL, NULL, @Updater, CURRENT_TIMESTAMP, @Updater, CURRENT_TIMESTAMP, @MembershipId);

		PRINT '-----------------------------------------------------------------------------------------------'
		PRINT 'Insert Person Journal Enty'
		PRINT '-----------------------------------------------------------------------------------------------'
				INSERT INTO PERSON_JOURNAL (PERSON_ID, JOURNAL_DATETIME, PERSON_JOURNAL_COMMENTS,SOURCE_CODE,CREATING_MODULE_CODE,
				CONTACT_TYPE_CODE,JOURNAL_ENTRY_TYPE_CODE, ORGINATOR_TYPE_CODE,CREATE_USER_ID, CREATE_DATETIME, UPDATE_USER_ID, UPDATE_DATETIME) 
				VALUES (@PersonId, CURRENT_TIMESTAMP, @JournalText, 'MANUAL', 'MANUAL', 'RSDINT', 'COMM', 'RSDINT', @Updater, CURRENT_TIMESTAMP, @Updater, CURRENT_TIMESTAMP);

			

			END;
ELSE
	BEGIN;
		PRINT 'Already ran script';
	END;
		-- ***********************************
		-- END SQL STATEMENT(S)
		-- ***********************************
		
	-- Commit all transactions
	IF @@TRANCOUNT > 0
	BEGIN;
		WHILE @@TRANCOUNT > 0
		BEGIN;
		COMMIT TRANSACTION;
			PRINT 'Transaction Committed...';
		END;
		
		PRINT 'Transaction(s) complete.';
		PRINT 'SQL statement(s) successfully committed.';
	END;
END TRY

-- Catch runtime errors
BEGIN CATCH;
	DECLARE @ErrorMessage VARCHAR(2044);
	SET @ErrorMessage = ERROR_MESSAGE() + '  See line number ' + CAST(ERROR_LINE() AS VARCHAR(256)) + '.';
	PRINT 'Runtime Error!  See error message below.';
	
	-- Rollback open transactions
	IF @@TRANCOUNT > 0 
	BEGIN;
		PRINT 'Transaction(s) rolling back...';
		ROLLBACK TRANSACTION;
		PRINT 'Transaction(s) successfully rolled back.';
		PRINT 'Transaction(s) complete.';
	END;
	
	-- Force errors in current windows so user is aware that the script did not run properly
	RAISERROR(@ErrorMessage,16,1);
END CATCH;
GO

-- Handle Compilation Errors (Not caught by Try Catch)
IF @@TRANCOUNT > 0 
BEGIN;
	PRINT 'Compilation Error!  See error message above.';
	
	-- Rollback all open transactions
	PRINT 'Transaction(s) rolling back...';
	ROLLBACK TRANSACTION;
	PRINT 'Transaction(s) successfully rolled back.';
	PRINT 'Transaction(s) complete.';
	PRINT '';
END;
GO